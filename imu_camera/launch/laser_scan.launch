
<launch>

<arg name="camera" default="SwissRanger" />
<arg name="frame_base_link" default="$(arg camera)/base" />
    
<!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="$(arg camera)/pointcloud_rotated"/>
        <remap from="scan" to="$(arg camera)/scan"/>
        <rosparam>
            target_frame: laser # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 1.0
            min_height: 0.15
            max_height: 0.35
            angle_min: -3.14159 # -M_PI/8
            angle_max: 3.14159 # M_PI/8
            #angle_min: -0.39269908169 # -M_PI/8
            #angle_max: 0.39269908169 # M_PI/8
            #angle_increment: 0.087 # M_PI/360.0
            angle_increment: 0.0045 # 45 grados entre 176 pixel
            scan_time: 0.3333
            range_min: 0.45
            range_max: 10.0
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>


<!-- SwissRanger/initialpose


<node pkg="tf" type="static_transform_publisher" name="world_odom" args="0.10 0 0 0.0 0.0 0.0 /world /map 40"/>
    <node pkg="tf" type="static_transform_publisher" name="map_odom" args="0.10 0 0 0.0 0.0 0.0 /map /odom 100" />
    <node pkg="tf" type="static_transform_publisher" name="odom_bl" args="0.10 0 0 0.0 0.0 0.0 /odom /base_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="bl_laser" args="0.0 0 0 0.0 0.0 0.0 /base_link /laser 100" />
 rosrun tf static_transform_publisher 0 0 0 0 0 0 1 laser SwissRanger 20
    <node name="map_server" pkg="map_server" type="map_server" args="/home/****/test.yaml"/> -->
<node pkg="tf" type="static_transform_publisher" name="bl_laser" args="0.0 0 0 0.0 0.0 0.0 $(arg frame_base_link) /laser 20" />
<node pkg="tf" type="static_transform_publisher" name="swiss_tf" args="0.0 0 0 0.0 0.0 0.0 /laser /SwissRanger 20" />

    <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
        <remap from="scan" to="$(arg camera)/scan"/>
        <!-- <param name="fixed_frame" value = "odom"/> -->
        <param name="base_frame" value = "$(arg frame_base_link)"/>
        <param name="fixed_frame" value = "$(arg camera)/fake_odom"/>
        <param name="use_cloud_input" value="false"/>
        <param name="publish_tf" value="true"/>
        <param name="publish_odom" value="true"/>
        <param name="use_odom" value="false"/>
        <param name="use_imu" value="true"/>
        <param name="use_alpha_beta" value="true"/>
        <param name="max_iterations" value="10"/>
    </node>


<node pkg="amcl" type="amcl" name="SwissRanger_amcl" output="screen">

<!-- Remaps in published and subscribed topics-->
  <remap from="amcl_pose" to="$(arg camera)/amcl_pose"/>
  <remap from="particlecloud" to="$(arg camera)/particlecloud"/>

  <remap from="scan" to="$(arg camera)/scan"/>
  <remap from="initialpose" to="$(arg camera)/initialpose"/>



  <param name="odom_frame_id" value="$(arg camera)/fake_odom"/>
  <param name="base_frame_id" value="$(arg frame_base_link)"/>
  <!-- Publish scans from best pose at a max of 10 Hz -->
  <param name="odom_model_type" value="diff"/>
  <param name="odom_alpha5" value="0.1"/>
  <param name="transform_tolerance" value="1.0" />
  <param name="gui_publish_rate" value="10.0"/>
  <param name="laser_max_beams" value="30"/>
  <param name="min_particles" value="500"/>
  <param name="max_particles" value="5000"/>
  <param name="kld_err" value="0.05"/>
  <param name="kld_z" value="0.99"/>
  <param name="odom_alpha1" value="0.2"/>
  <param name="odom_alpha2" value="0.2"/>
  <!-- translation std dev, m -->
  <param name="odom_alpha3" value="0.8"/>
  <param name="odom_alpha4" value="0.2"/>
  <param name="laser_z_hit" value="0.5"/>
  <param name="laser_z_short" value="0.05"/>
  <param name="laser_z_max" value="0.05"/>
  <param name="laser_z_rand" value="0.5"/>
  <param name="laser_sigma_hit" value="0.2"/>
  <param name="laser_lambda_short" value="0.1"/>
  <param name="laser_lambda_short" value="0.1"/>
  <param name="laser_model_type" value="likelihood_field"/>
  <!-- <param name="laser_model_type" value="beam"/> -->
  <param name="laser_likelihood_max_dist" value="2.0"/>
  <param name="update_min_d" value="0.2"/>
  <param name="update_min_a" value="0.5"/>
  <param name="resample_interval" value="1"/>
  <param name="transform_tolerance" value="0.1"/>
  <param name="recovery_alpha_slow" value="0.0"/>
  <param name="recovery_alpha_fast" value="0.0"/>
</node>


<!-- Launch RVIZ calibration-->
<node pkg="rviz" type="rviz" respawn="false" output="screen" name="rviz_calibration"
   	 args="-d '$(find imu_camera)/rviz/tof_calib.rviz'" required="true" />
</launch>
